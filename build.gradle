/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.3.3/samples
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    //id 'java-library'
    id 'java'
    id 'eclipse'
    id 'application'
    
}

mainClassName = 'com.onewho.gamerbot.BotMain'

/*eclipseJdt << {
	ant.propertyfile(file: ".settings/org.eclipse.core.resources.prefs") {
		ant.entry(key: "eclipse.preferences.version", value: "1")
		ant.entry(key: "encoding/<project>", value: "utf-8")
	}
}*/

compileJava.options.encoding = 'UTF-8'

task procfile(type: Copy) {
	from ("Procfile")
	into ("$buildDir/libs")
}

task fatJar(type: Jar) {
	//options.encoding = "UTF-8"
	
	manifest {
        attributes( 
             'Implementation-Title': project.name,  
             'Implementation-Version': 0.1,
        	 'Main-Class': 'com.onewho.gamerbot.BotMain'
        )
    }
    baseName = project.name
    from { configurations.compile
    			.findAll { !it.name.endsWith('pom') }
    			.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    
    exclude "META-INF/*.SF"
  	exclude "META-INF/*.DSA"
  	exclude "META-INF/*.RSA"
}

task heroku(type: Exec) {
	//workingDir "$buildDir/libs"
	commandLine 'cmd','/c','heroku_upload.bat'
}

task publish(type: GradleBuild) {
	tasks = ['clean','fatJar','procfile','heroku']
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    //jcenter()
    mavenCentral() // for transitive dependencies
    maven {
      name 'm2-dv8tion'
      url 'https://m2.dv8tion.net/releases'
    }
    
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    //implementation 'com.google.guava:guava:28.2-jre'

    // Use JUnit test framework
    //testImplementation 'junit:junit:4.12'
    
    /*implementation('com.fasterxml.jackson.core:jackson-core') {
        version {
            strictly '2.10.1'
        }
    }*/
    
    implementation("net.dv8tion:JDA:5.0.0-alpha.18")
    //compile 'com.googlecode.json-simple:json-simple:1.1.1'
    
    //implementation platform('com.google.cloud:libraries-bom:19.2.1')
	//compile 'com.google.cloud:google-cloud-storage:1.113.14'
	//compile 'com.google.api-client:google-api-client:1.30.6'
    //compile 'com.google.oauth-client:google-oauth-client-jetty:1.30.6'
    //compile 'com.google.apis:google-api-services-sheets:v4-rev581-1.25.0'
    //compile group: 'com.google.auth', name: 'google-auth-library-oauth2-http'
    //implementation platform('com.google.cloud:libraries-bom:19.2.1')
	//compile 'com.google.cloud:google-cloud-storage'
}

run{
    standardInput = System.in
}